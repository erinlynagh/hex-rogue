import React, { useEffect } from 'react';
import { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '@/styles/Home.module.css';
import { you, allEnemies } from '@/lib/constants/constants';
import { Character, Enemy } from '@/classes/characterClasses';

function constructGrid(): number[] {
  const maxHeight = 21;
  const maxWidth = 5;
  let rowLengths = [];
  const steps = 4;
  for (let i = 1; i <= maxHeight; i++) {
    if (i <= maxHeight - steps) {
      const calcRowLength = i;
      calcRowLength > maxWidth
        ? rowLengths.push(i % 2 === 1 ? maxWidth : maxWidth - 1)
        : rowLengths.push(calcRowLength);
    } else {
      const calcRowLength = maxHeight - i + 1;
      calcRowLength > maxWidth
        ? rowLengths.push(maxWidth)
        : rowLengths.push(calcRowLength);
    }
  }
  return rowLengths;
}

function ConstructGridElement(gridRows: number[]) {
  return (
    <div className="flex flex-col">
      {[...Array(gridRows.length)].map((x, i) => {
        return (
          <div
            className="flex flex-row justify-center
           align-center"
          >
            {[...Array(gridRows[i])].map((x, i) => {
              return (
                <div
                  key={i}
                  className="bg-slate-800 border-50 w-10 h-10 rounded-full hover:bg-slate-400"
                ></div>
              );
            })}
          </div>
        );
      })}
    </div>
  );
}

const Home: NextPage = () => {
  const [turns, setTurns] = React.useState(0);
  const [totalTurns, setTotalTurns] = React.useState(0);
  const [depth, setDepth] = React.useState(0);
  const [enemies, setEnemies] = React.useState<Enemy[]>(allEnemies[0]);

  useEffect(() => {
    if (turns > 0) {
      enemies.forEach(enemy => {
        enemy.takeTurn();
      });
    }
  }, [turns]);

  useEffect(() => {
    setEnemies(allEnemies[depth]);
  }, [depth]);

  function descend() {
    console.log('descending to level ' + (depth + 1));
    console.log('total turns: ' + (totalTurns + turns));
    setTotalTurns(totalTurns + turns);
    setTurns(0);
    setDepth(depth + 1);
  }

  const gridRows = constructGrid();

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="flex flex-col gap-2">
          {ConstructGridElement(gridRows)}
          <div className="flex gap-2 justify-center">
            <input
              type={'button'}
              className="text-white bg-blue-700 border-blue-700 rounded-lg px-2 py-1"
              value={'Bash'}
            />
            <input
              type={'button'}
              value={'Hop'}
              className="text-white bg-blue-700 border-blue-700 rounded-lg px-2 py-1"
            />
            <input
              type={'button'}
              value={'Throw'}
              className="text-white bg-blue-700 border-blue-700 rounded-lg px-2 py-1"
            />
          </div>
          <div className="flex gap-2 justify-center">
            <input
              type={'button'}
              className="text-white bg-blue-700 border-blue-700 rounded-lg px-2 py-1"
              value={'End Turn'}
              onClick={() => setTurns(turns + 1)}
            />
            <input
              type={'button'}
              value={'Descend'}
              className="text-white bg-blue-700 border-blue-700 rounded-lg px-2 py-1"
              onClick={() => descend()}
            />
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
